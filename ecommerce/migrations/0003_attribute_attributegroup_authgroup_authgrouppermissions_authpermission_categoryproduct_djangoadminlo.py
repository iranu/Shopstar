# Generated by Django 2.0 on 2018-01-04 11:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('ecommerce', '0002_star'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attributegroup',
            fields=[
                ('attributegroupid', models.IntegerField(db_column='attributeGroupId', primary_key=True, serialize=False)),
                ('attributegroupname', models.CharField(blank=True, db_column='attributeGroupName', max_length=45, null=True)),
                ('attributeid', models.IntegerField(db_column='attributeId')),
            ],
            options={
                'db_table': 'AttributeGroup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EcommerceStar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ecommerce_star',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EcommerceUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.CharField(max_length=254, unique=True)),
                ('is_active', models.IntegerField()),
                ('is_staff', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'ecommerce_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EcommerceUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ecommerce_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EcommerceUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ecommerce_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orderdetail',
            fields=[
                ('detaild', models.IntegerField(primary_key=True, serialize=False)),
                ('detailorderid', models.IntegerField(db_column='detailOrderId')),
                ('detailproductid', models.IntegerField(db_column='detailProductId')),
            ],
            options={
                'db_table': 'OrderDetail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productid', models.AutoField(db_column='productId', primary_key=True, serialize=False)),
                ('productname', models.CharField(db_column='productName', max_length=200)),
                ('productdesc', models.CharField(blank=True, db_column='productDesc', max_length=45, null=True)),
                ('productcategoryid', models.IntegerField(db_column='productCategoryId')),
                ('producttypeid', models.IntegerField(db_column='productTypeId')),
            ],
            options={
                'db_table': 'Product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('image', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('attributeid', models.ForeignKey(db_column='attributeId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ecommerce.Attributegroup')),
                ('attributename', models.CharField(blank=True, db_column='attributeName', max_length=200, null=True)),
            ],
            options={
                'db_table': 'Attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categoryproduct',
            fields=[
                ('categoryid', models.ForeignKey(db_column='CategoryId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ecommerce.Product')),
                ('categoryname', models.CharField(db_column='CategoryName', max_length=200)),
            ],
            options={
                'db_table': 'CategoryProduct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('orderid', models.ForeignKey(db_column='orderId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ecommerce.Orderdetail')),
                ('orderuserid', models.IntegerField(db_column='orderUserId')),
                ('orderamount', models.IntegerField(blank=True, db_column='orderAmount', null=True)),
                ('ordertrackingnumber', models.IntegerField(blank=True, db_column='orderTrackingNumber', null=True)),
                ('orderaddress', models.CharField(blank=True, db_column='OrderAddress', max_length=200, null=True)),
                ('orderemail', models.CharField(blank=True, db_column='orderEmail', max_length=45, null=True)),
                ('orderdate', models.DateField(blank=True, db_column='orderDate', null=True)),
            ],
            options={
                'db_table': 'Order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Producttype',
            fields=[
                ('typeid', models.ForeignKey(db_column='typeId', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ecommerce.Product')),
                ('producttypename', models.CharField(db_column='productTypeName', max_length=200)),
                ('attributegroupid', models.IntegerField(db_column='attributeGroupId')),
            ],
            options={
                'db_table': 'ProductType',
                'managed': False,
            },
        ),
    ]
